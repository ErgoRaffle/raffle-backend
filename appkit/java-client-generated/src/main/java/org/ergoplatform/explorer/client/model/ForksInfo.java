/*
 * Ergo blockchain explorer
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ergoplatform.explorer.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.ergoplatform.explorer.client.model.ForksInfoForks;
/**
 * Forks summary
 */
@Schema(description = "Forks summary")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-12-09T08:14:50.203Z[GMT]")
public class ForksInfo {
  @SerializedName("quantity")
  private Integer quantity = null;

  @SerializedName("forks")
  private List<ForksInfoForks> forks = null;

  public ForksInfo quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Total number of forks
   * @return quantity
  **/
  @Schema(example = "109", description = "Total number of forks")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public ForksInfo forks(List<ForksInfoForks> forks) {
    this.forks = forks;
    return this;
  }

  public ForksInfo addForksItem(ForksInfoForks forksItem) {
    if (this.forks == null) {
      this.forks = new ArrayList<>();
    }
    this.forks.add(forksItem);
    return this;
  }

   /**
   * Get forks
   * @return forks
  **/
  @Schema(description = "")
  public List<ForksInfoForks> getForks() {
    return forks;
  }

  public void setForks(List<ForksInfoForks> forks) {
    this.forks = forks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForksInfo forksInfo = (ForksInfo) o;
    return Objects.equals(this.quantity, forksInfo.quantity) &&
        Objects.equals(this.forks, forksInfo.forks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quantity, forks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForksInfo {\n");
    
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    forks: ").append(toIndentedString(forks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
