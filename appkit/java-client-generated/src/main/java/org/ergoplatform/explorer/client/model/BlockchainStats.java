/*
 * Ergo blockchain explorer
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ergoplatform.explorer.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.ergoplatform.explorer.client.model.BlockchainStatsBlockSummary;
import org.ergoplatform.explorer.client.model.BlockchainStatsMiningCost;
import org.ergoplatform.explorer.client.model.BlockchainStatsTransactionSummary;
/**
 * BlockchainStats
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-12-09T08:14:50.203Z[GMT]")
public class BlockchainStats {
  @SerializedName("blockSummary")
  private BlockchainStatsBlockSummary blockSummary = null;

  @SerializedName("transactionSummary")
  private BlockchainStatsTransactionSummary transactionSummary = null;

  @SerializedName("miningCost")
  private BlockchainStatsMiningCost miningCost = null;

  public BlockchainStats blockSummary(BlockchainStatsBlockSummary blockSummary) {
    this.blockSummary = blockSummary;
    return this;
  }

   /**
   * Get blockSummary
   * @return blockSummary
  **/
  @Schema(description = "")
  public BlockchainStatsBlockSummary getBlockSummary() {
    return blockSummary;
  }

  public void setBlockSummary(BlockchainStatsBlockSummary blockSummary) {
    this.blockSummary = blockSummary;
  }

  public BlockchainStats transactionSummary(BlockchainStatsTransactionSummary transactionSummary) {
    this.transactionSummary = transactionSummary;
    return this;
  }

   /**
   * Get transactionSummary
   * @return transactionSummary
  **/
  @Schema(description = "")
  public BlockchainStatsTransactionSummary getTransactionSummary() {
    return transactionSummary;
  }

  public void setTransactionSummary(BlockchainStatsTransactionSummary transactionSummary) {
    this.transactionSummary = transactionSummary;
  }

  public BlockchainStats miningCost(BlockchainStatsMiningCost miningCost) {
    this.miningCost = miningCost;
    return this;
  }

   /**
   * Get miningCost
   * @return miningCost
  **/
  @Schema(description = "")
  public BlockchainStatsMiningCost getMiningCost() {
    return miningCost;
  }

  public void setMiningCost(BlockchainStatsMiningCost miningCost) {
    this.miningCost = miningCost;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockchainStats blockchainStats = (BlockchainStats) o;
    return Objects.equals(this.blockSummary, blockchainStats.blockSummary) &&
        Objects.equals(this.transactionSummary, blockchainStats.transactionSummary) &&
        Objects.equals(this.miningCost, blockchainStats.miningCost);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockSummary, transactionSummary, miningCost);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockchainStats {\n");
    
    sb.append("    blockSummary: ").append(toIndentedString(blockSummary)).append("\n");
    sb.append("    transactionSummary: ").append(toIndentedString(transactionSummary)).append("\n");
    sb.append("    miningCost: ").append(toIndentedString(miningCost)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
