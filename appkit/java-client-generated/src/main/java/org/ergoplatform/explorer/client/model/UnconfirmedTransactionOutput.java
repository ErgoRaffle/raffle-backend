/*
 * Ergo blockchain explorer
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ergoplatform.explorer.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.ergoplatform.explorer.client.model.Asset;
import org.ergoplatform.explorer.client.model.Registers;
/**
 * UnconfirmedTransactionOutput
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-12-09T08:14:50.203Z[GMT]")
public class UnconfirmedTransactionOutput {
  @SerializedName("boxId")
  private String boxId = null;

  @SerializedName("value")
  private BigDecimal value = null;

  @SerializedName("creationHeight")
  private Integer creationHeight = null;

  @SerializedName("ergoTree")
  private String ergoTree = null;

  @SerializedName("assets")
  private List<Asset> assets = new ArrayList<>();

  @SerializedName("additionalRegisters")
  private Registers additionalRegisters = null;

  public UnconfirmedTransactionOutput boxId(String boxId) {
    this.boxId = boxId;
    return this;
  }

   /**
   * Get boxId
   * @return boxId
  **/
  @Schema(required = true, description = "")
  public String getBoxId() {
    return boxId;
  }

  public void setBoxId(String boxId) {
    this.boxId = boxId;
  }

  public UnconfirmedTransactionOutput value(BigDecimal value) {
    this.value = value;
    return this;
  }

   /**
   * Amount of Ergo token
   * minimum: 0
   * @return value
  **/
  @Schema(example = "14.7", required = true, description = "Amount of Ergo token")
  public BigDecimal getValue() {
    return value;
  }

  public void setValue(BigDecimal value) {
    this.value = value;
  }

  public UnconfirmedTransactionOutput creationHeight(Integer creationHeight) {
    this.creationHeight = creationHeight;
    return this;
  }

   /**
   * Height the output was created at
   * @return creationHeight
  **/
  @Schema(example = "9149", required = true, description = "Height the output was created at")
  public Integer getCreationHeight() {
    return creationHeight;
  }

  public void setCreationHeight(Integer creationHeight) {
    this.creationHeight = creationHeight;
  }

  public UnconfirmedTransactionOutput ergoTree(String ergoTree) {
    this.ergoTree = ergoTree;
    return this;
  }

   /**
   * Get ergoTree
   * @return ergoTree
  **/
  @Schema(required = true, description = "")
  public String getErgoTree() {
    return ergoTree;
  }

  public void setErgoTree(String ergoTree) {
    this.ergoTree = ergoTree;
  }

  public UnconfirmedTransactionOutput assets(List<Asset> assets) {
    this.assets = assets;
    return this;
  }

  public UnconfirmedTransactionOutput addAssetsItem(Asset assetsItem) {
    this.assets.add(assetsItem);
    return this;
  }

   /**
   * Assets list in the transaction
   * @return assets
  **/
  @Schema(required = true, description = "Assets list in the transaction")
  public List<Asset> getAssets() {
    return assets;
  }

  public void setAssets(List<Asset> assets) {
    this.assets = assets;
  }

  public UnconfirmedTransactionOutput additionalRegisters(Registers additionalRegisters) {
    this.additionalRegisters = additionalRegisters;
    return this;
  }

   /**
   * Get additionalRegisters
   * @return additionalRegisters
  **/
  @Schema(required = true, description = "")
  public Registers getAdditionalRegisters() {
    return additionalRegisters;
  }

  public void setAdditionalRegisters(Registers additionalRegisters) {
    this.additionalRegisters = additionalRegisters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UnconfirmedTransactionOutput unconfirmedTransactionOutput = (UnconfirmedTransactionOutput) o;
    return Objects.equals(this.boxId, unconfirmedTransactionOutput.boxId) &&
        Objects.equals(this.value, unconfirmedTransactionOutput.value) &&
        Objects.equals(this.creationHeight, unconfirmedTransactionOutput.creationHeight) &&
        Objects.equals(this.ergoTree, unconfirmedTransactionOutput.ergoTree) &&
        Objects.equals(this.assets, unconfirmedTransactionOutput.assets) &&
        Objects.equals(this.additionalRegisters, unconfirmedTransactionOutput.additionalRegisters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boxId, value, creationHeight, ergoTree, assets, additionalRegisters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UnconfirmedTransactionOutput {\n");
    
    sb.append("    boxId: ").append(toIndentedString(boxId)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    creationHeight: ").append(toIndentedString(creationHeight)).append("\n");
    sb.append("    ergoTree: ").append(toIndentedString(ergoTree)).append("\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    additionalRegisters: ").append(toIndentedString(additionalRegisters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
