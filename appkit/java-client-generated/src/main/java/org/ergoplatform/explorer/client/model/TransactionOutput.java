/*
 * Ergo blockchain explorer
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ergoplatform.explorer.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.ergoplatform.explorer.client.model.Asset;
import org.ergoplatform.explorer.client.model.Registers;
/**
 * TransactionOutput
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-12-09T08:14:50.203Z[GMT]")
public class TransactionOutput {
  @SerializedName("id")
  private String id = null;

  @SerializedName("value")
  private BigDecimal value = null;

  @SerializedName("creationHeight")
  private Integer creationHeight = null;

  @SerializedName("ergoTree")
  private String ergoTree = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("assets")
  private List<Asset> assets = new ArrayList<>();

  @SerializedName("additionalRegisters")
  private Registers additionalRegisters = null;

  @SerializedName("spentTransactionId")
  private String spentTransactionId = null;

  @SerializedName("mainChain")
  private Boolean mainChain = null;

  public TransactionOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TransactionOutput value(BigDecimal value) {
    this.value = value;
    return this;
  }

   /**
   * Amount of Ergo token
   * minimum: 0
   * @return value
  **/
  @Schema(example = "14.7", required = true, description = "Amount of Ergo token")
  public BigDecimal getValue() {
    return value;
  }

  public void setValue(BigDecimal value) {
    this.value = value;
  }

  public TransactionOutput creationHeight(Integer creationHeight) {
    this.creationHeight = creationHeight;
    return this;
  }

   /**
   * Height the output was created at
   * @return creationHeight
  **/
  @Schema(example = "9149", required = true, description = "Height the output was created at")
  public Integer getCreationHeight() {
    return creationHeight;
  }

  public void setCreationHeight(Integer creationHeight) {
    this.creationHeight = creationHeight;
  }

  public TransactionOutput ergoTree(String ergoTree) {
    this.ergoTree = ergoTree;
    return this;
  }

   /**
   * Get ergoTree
   * @return ergoTree
  **/
  @Schema(required = true, description = "")
  public String getErgoTree() {
    return ergoTree;
  }

  public void setErgoTree(String ergoTree) {
    this.ergoTree = ergoTree;
  }

  public TransactionOutput address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(required = true, description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public TransactionOutput assets(List<Asset> assets) {
    this.assets = assets;
    return this;
  }

  public TransactionOutput addAssetsItem(Asset assetsItem) {
    this.assets.add(assetsItem);
    return this;
  }

   /**
   * Assets list in the transaction
   * @return assets
  **/
  @Schema(required = true, description = "Assets list in the transaction")
  public List<Asset> getAssets() {
    return assets;
  }

  public void setAssets(List<Asset> assets) {
    this.assets = assets;
  }

  public TransactionOutput additionalRegisters(Registers additionalRegisters) {
    this.additionalRegisters = additionalRegisters;
    return this;
  }

   /**
   * Get additionalRegisters
   * @return additionalRegisters
  **/
  @Schema(required = true, description = "")
  public Registers getAdditionalRegisters() {
    return additionalRegisters;
  }

  public void setAdditionalRegisters(Registers additionalRegisters) {
    this.additionalRegisters = additionalRegisters;
  }

  public TransactionOutput spentTransactionId(String spentTransactionId) {
    this.spentTransactionId = spentTransactionId;
    return this;
  }

   /**
   * Get spentTransactionId
   * @return spentTransactionId
  **/
  @Schema(required = true, description = "")
  public String getSpentTransactionId() {
    return spentTransactionId;
  }

  public void setSpentTransactionId(String spentTransactionId) {
    this.spentTransactionId = spentTransactionId;
  }

  public TransactionOutput mainChain(Boolean mainChain) {
    this.mainChain = mainChain;
    return this;
  }

   /**
   * Flag indication wheather box belongs to main chain
   * @return mainChain
  **/
  @Schema(example = "true", required = true, description = "Flag indication wheather box belongs to main chain")
  public Boolean isMainChain() {
    return mainChain;
  }

  public void setMainChain(Boolean mainChain) {
    this.mainChain = mainChain;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionOutput transactionOutput = (TransactionOutput) o;
    return Objects.equals(this.id, transactionOutput.id) &&
        Objects.equals(this.value, transactionOutput.value) &&
        Objects.equals(this.creationHeight, transactionOutput.creationHeight) &&
        Objects.equals(this.ergoTree, transactionOutput.ergoTree) &&
        Objects.equals(this.address, transactionOutput.address) &&
        Objects.equals(this.assets, transactionOutput.assets) &&
        Objects.equals(this.additionalRegisters, transactionOutput.additionalRegisters) &&
        Objects.equals(this.spentTransactionId, transactionOutput.spentTransactionId) &&
        Objects.equals(this.mainChain, transactionOutput.mainChain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, value, creationHeight, ergoTree, address, assets, additionalRegisters, spentTransactionId, mainChain);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionOutput {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    creationHeight: ").append(toIndentedString(creationHeight)).append("\n");
    sb.append("    ergoTree: ").append(toIndentedString(ergoTree)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    additionalRegisters: ").append(toIndentedString(additionalRegisters)).append("\n");
    sb.append("    spentTransactionId: ").append(toIndentedString(spentTransactionId)).append("\n");
    sb.append("    mainChain: ").append(toIndentedString(mainChain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
