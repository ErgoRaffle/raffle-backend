/*
 * Ergo blockchain explorer
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.ergoplatform.explorer.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * BlockchainStatsMiningCost
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-12-09T08:14:50.203Z[GMT]")
public class BlockchainStatsMiningCost {
  @SerializedName("totalMinersRevenue")
  private BigDecimal totalMinersRevenue = null;

  @SerializedName("percentEarnedTransactionsFees")
  private BigDecimal percentEarnedTransactionsFees = null;

  @SerializedName("percentTransactionVolume")
  private BigDecimal percentTransactionVolume = null;

  @SerializedName("costPerTransaction")
  private BigDecimal costPerTransaction = null;

  @SerializedName("difficulty")
  private BigDecimal difficulty = null;

  @SerializedName("hashRate")
  private BigDecimal hashRate = null;

  public BlockchainStatsMiningCost totalMinersRevenue(BigDecimal totalMinersRevenue) {
    this.totalMinersRevenue = totalMinersRevenue;
    return this;
  }

   /**
   * Total Miners Revenue
   * @return totalMinersRevenue
  **/
  @Schema(example = "439023010423", description = "Total Miners Revenue")
  public BigDecimal getTotalMinersRevenue() {
    return totalMinersRevenue;
  }

  public void setTotalMinersRevenue(BigDecimal totalMinersRevenue) {
    this.totalMinersRevenue = totalMinersRevenue;
  }

  public BlockchainStatsMiningCost percentEarnedTransactionsFees(BigDecimal percentEarnedTransactionsFees) {
    this.percentEarnedTransactionsFees = percentEarnedTransactionsFees;
    return this;
  }

   /**
   * Miners revenue as percentage of the transaction fees
   * @return percentEarnedTransactionsFees
  **/
  @Schema(example = "24.54", description = "Miners revenue as percentage of the transaction fees")
  public BigDecimal getPercentEarnedTransactionsFees() {
    return percentEarnedTransactionsFees;
  }

  public void setPercentEarnedTransactionsFees(BigDecimal percentEarnedTransactionsFees) {
    this.percentEarnedTransactionsFees = percentEarnedTransactionsFees;
  }

  public BlockchainStatsMiningCost percentTransactionVolume(BigDecimal percentTransactionVolume) {
    this.percentTransactionVolume = percentTransactionVolume;
    return this;
  }

   /**
   * Miners revenue as percentage of the transaction volume
   * @return percentTransactionVolume
  **/
  @Schema(example = "2.34", description = "Miners revenue as percentage of the transaction volume")
  public BigDecimal getPercentTransactionVolume() {
    return percentTransactionVolume;
  }

  public void setPercentTransactionVolume(BigDecimal percentTransactionVolume) {
    this.percentTransactionVolume = percentTransactionVolume;
  }

  public BlockchainStatsMiningCost costPerTransaction(BigDecimal costPerTransaction) {
    this.costPerTransaction = costPerTransaction;
    return this;
  }

   /**
   * Miners revenue divided by the number of transactions
   * @return costPerTransaction
  **/
  @Schema(example = "4323000", description = "Miners revenue divided by the number of transactions")
  public BigDecimal getCostPerTransaction() {
    return costPerTransaction;
  }

  public void setCostPerTransaction(BigDecimal costPerTransaction) {
    this.costPerTransaction = costPerTransaction;
  }

  public BlockchainStatsMiningCost difficulty(BigDecimal difficulty) {
    this.difficulty = difficulty;
    return this;
  }

   /**
   * Difficulty
   * @return difficulty
  **/
  @Schema(example = "32340990000", description = "Difficulty")
  public BigDecimal getDifficulty() {
    return difficulty;
  }

  public void setDifficulty(BigDecimal difficulty) {
    this.difficulty = difficulty;
  }

  public BlockchainStatsMiningCost hashRate(BigDecimal hashRate) {
    this.hashRate = hashRate;
    return this;
  }

   /**
   * Hash Rate
   * @return hashRate
  **/
  @Schema(example = "290349095", description = "Hash Rate")
  public BigDecimal getHashRate() {
    return hashRate;
  }

  public void setHashRate(BigDecimal hashRate) {
    this.hashRate = hashRate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockchainStatsMiningCost blockchainStatsMiningCost = (BlockchainStatsMiningCost) o;
    return Objects.equals(this.totalMinersRevenue, blockchainStatsMiningCost.totalMinersRevenue) &&
        Objects.equals(this.percentEarnedTransactionsFees, blockchainStatsMiningCost.percentEarnedTransactionsFees) &&
        Objects.equals(this.percentTransactionVolume, blockchainStatsMiningCost.percentTransactionVolume) &&
        Objects.equals(this.costPerTransaction, blockchainStatsMiningCost.costPerTransaction) &&
        Objects.equals(this.difficulty, blockchainStatsMiningCost.difficulty) &&
        Objects.equals(this.hashRate, blockchainStatsMiningCost.hashRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalMinersRevenue, percentEarnedTransactionsFees, percentTransactionVolume, costPerTransaction, difficulty, hashRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockchainStatsMiningCost {\n");
    
    sb.append("    totalMinersRevenue: ").append(toIndentedString(totalMinersRevenue)).append("\n");
    sb.append("    percentEarnedTransactionsFees: ").append(toIndentedString(percentEarnedTransactionsFees)).append("\n");
    sb.append("    percentTransactionVolume: ").append(toIndentedString(percentTransactionVolume)).append("\n");
    sb.append("    costPerTransaction: ").append(toIndentedString(costPerTransaction)).append("\n");
    sb.append("    difficulty: ").append(toIndentedString(difficulty)).append("\n");
    sb.append("    hashRate: ").append(toIndentedString(hashRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
